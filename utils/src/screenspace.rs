/*********************************************************************
          _____                    _____                    _____                    _____                    _____                    _____                            _____                    _____                    _____                    _____                    _____
         /\    \                  /\    \                  /\    \                  /\    \                  /\    \                  /\    \                          /\    \                  /\    \                  /\    \                  /\    \                  /\    \
        /::\    \                /::\    \                /::\    \                /::\    \                /::\    \                /::\____\                        /::\    \                /::\    \                /::\    \                /::\    \                /::\    \
       /::::\    \              /::::\    \              /::::\    \              /::::\    \              /::::\    \              /::::|   |                       /::::\    \              /::::\    \              /::::\    \              /::::\    \              /::::\    \
      /::::::\    \            /::::::\    \            /::::::\    \            /::::::\    \            /::::::\    \            /:::::|   |                      /::::::\    \            /::::::\    \            /::::::\    \            /::::::\    \            /::::::\    \
     /:::/\:::\    \          /:::/\:::\    \          /:::/\:::\    \          /:::/\:::\    \          /:::/\:::\    \          /::::::|   |                     /:::/\:::\    \          /:::/\:::\    \          /:::/\:::\    \          /:::/\:::\    \          /:::/\:::\    \
\:::\   \:::\   \::/    /\:::\    \      \::/    /\::/   |::::\  /:::|____|\:::\   \:::\   \::/    /\:::\   \:::\   \::/    /\::/    /|::|  /:::/    /        \:::\   \:::\   \::/    /\::/    \:::\  /:::|____|\::/    \:::\  /:::/    /\:::\    \      \::/    /\:::\   \:::\   \::/    /
 \:::\   \:::\   \/____/  \:::\    \      \/____/  \/____|:::::\/:::/    /  \:::\   \:::\   \/____/  \:::\   \:::\   \/____/  \/____/ |::| /:::/    /          \:::\   \:::\   \/____/  \/_____/\:::\/:::/    /  \/____/ \:::\/:::/    /  \:::\    \      \/____/  \:::\   \:::\   \/____/
*********************************************************************/

use serde::Deserialize;

#[derive(Clone, Copy, Deserialize)]
pub enum CommonResolution {
    FourK16x9,
}

impl CommonResolution {
    pub const fn space(self) -> Space {
        let (width, height) = match self {
            CommonResolution::FourK16x9 => (3840., 2160.),
        };

        Space { width, height }
    }
}

#[derive(Clone, Copy, PartialEq, PartialOrd, Default, Deserialize)]
pub struct Space {
    pub width: f32,
    pub height: f32,
}

impl Space {
    pub fn ratio(self) -> f32 {
        self.width / self.height
    }
}
